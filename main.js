/*
  VARIABLES:
var - old variable (avoid using)
let - a variable with a block scope
const - a variable whose value cannot be changed (also block scope)


Scope   var let const
Global  ‚úÖ Available ‚úÖ Available ‚úÖ Available ‚úÖ Available
Functional  ‚úÖ Available ‚úÖ Available ‚úÖ Available ‚úÖ Available
Block (if, for, {})   ‚ùå Unlimited by block scope ‚úÖ Available ‚úÖ Available
Nested functions (lexical scope)  ‚úÖ Available ‚úÖ Available ‚úÖ Available
*/

/*
  HOISTING:
*/

// ES 5
// Example:
console.log(a)
// == Error

// Example:
console.log(a)
var a;
// == undefined

// Example:
console.log(a)
var a = 5;
// == undefined

// Example:
console.log(a)
var a = 5;
console.log(a)
a = 7;
console.log(a)
// == undefined, 5, 7

// ES 6
// Example:
let b = 99;
console.log(b)
// == 99

// Example:
console.log(c)
let c = 99;
// == Error

/*
  END HOISTING:
*/

/*
  This:
  this. - is a keyword that indicates the context of the function.
  Its value depends on how and where the function is called. 

  this. ‚Äî —Ü–µ –∫–ª—é—á–æ–≤–µ —Å–ª–æ–≤–æ, —è–∫–µ –≤–∫–∞–∑—É—î –Ω–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó.
  –ô–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ —Ç–æ–≥–æ, —è–∫ —ñ –¥–µ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è —Ñ—É–Ω–∫—Ü—ñ—è.

  1Ô∏è‚É£ this —É –≥–ª–æ–±–∞–ª—å–Ω—ñ–π –æ–±–ª–∞—Å—Ç—ñ
  –£ –±—Ä–∞—É–∑–µ—Ä—ñ this –ø–æ—Å–∏–ª–∞—î—Ç—å—Å—è –Ω–∞ window.

  2Ô∏è‚É£ this —É —Ñ—É–Ω–∫—Ü—ñ—ó
  üìå –û–≥–æ–ª–æ—à–µ–Ω–∞ –∑–≤–∏—á–∞–π–Ω–∏–º —Å–ø–æ—Å–æ–±–æ–º (function)
  üîπ –ë–µ–∑ 'use strict' ‚Üí this –ø–æ—Å–∏–ª–∞—î—Ç—å—Å—è –Ω–∞ window (—É –±—Ä–∞—É–∑–µ—Ä—ñ).
  üîπ –ó 'use strict' ‚Üí this –±—É–¥–µ undefined.
*/

function showThis() {
  console.log(this);
}
showThis(); // üñ•Ô∏è –ë—Ä–∞—É–∑–µ—Ä: window

// "use strict";
function showThisStrict() {
  console.log(this);
}
showThisStrict(); // ‚ùå undefined

/*
  3Ô∏è‚É£ this —É –º–µ—Ç–æ–¥–∞—Ö –æ–±'—î–∫—Ç–∞
  üìå –Ø–∫—â–æ —Ñ—É–Ω–∫—Ü—ñ—è –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è —è–∫ –º–µ—Ç–æ–¥ –æ–±'—î–∫—Ç–∞ ‚Üí this –ø–æ—Å–∏–ª–∞—î—Ç—å—Å—è –Ω–∞ —Ü–µ–π –æ–±'—î–∫—Ç.
*/
const person = {
  name: "–Ü–≤–∞–Ω",
  sayHi() {
    console.log(this.name); // ‚úÖ "–Ü–≤–∞–Ω"
  }
};
person.sayHi();

/*
4Ô∏è‚É£ this —É –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞—Ö (new)
https://chatgpt.com/c/67b9e59f-0b54-8009-bcd2-19a72c769964
*/
/*
  END This:
*/